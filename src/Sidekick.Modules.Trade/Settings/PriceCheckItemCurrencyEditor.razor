@using Sidekick.Apis.Poe.Localization
@using Sidekick.Apis.Poe.Trade.Models
@using Sidekick.Common.Blazor.Settings
@using Sidekick.Common.Enums
@using Sidekick.Common.Settings

<FormSelect Label="@Resources["Currency_of_Listed_Items"]"
            Value="@Currency"
            ValueChanged="CurrencyChanged"
            Options="Options"/>

@inject IStringLocalizer<SettingsResources> Resources
@inject ISettingsService SettingsService
@inject IStringLocalizer<TradeCurrencyResources> OptionsLocalizer

@code {

    private string? Currency { get; set; }

    private List<SelectOption> Options { get; set; } =
    [
    ];

    protected override async Task OnInitializedAsync()
    {
        Currency = await SettingsService.GetString(SettingKeys.PriceCheckItemCurrency);
        Options =
        [
        ];

        foreach (var x in Enum.GetValues<TradeCurrency>())
        {
            Options.Add(new SelectOption
            {
                Value = x.GetValueAttribute() ?? string.Empty,
                Label = OptionsLocalizer[x.ToString()],
            });
        }

        await base.OnInitializedAsync();
    }

    private async Task CurrencyChanged(string? value)
    {
        Currency = value;
        await SettingsService.Set(SettingKeys.PriceCheckItemCurrency, value);
    }

}
