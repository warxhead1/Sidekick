@using Sidekick.Apis.Poe.Trade.Models
@using Sidekick.Common.Game.Items
@using Sidekick.Modules.Trade.Localization

<FilterWrapper>
    <div class="flex flex-nowrap items-center">
        <div class="grow">
            <FormCheckbox Value="Filter.Checked ?? false"
                          NoMargin="true"
                          ValueChanged="(v) => Filter.Checked = v">
                <ItemModifierText Class="text-left"
                                  Category="ModifierCategory.Pseudo">@Filter.Modifier.Text</ItemModifierText>
            </FormCheckbox>
        </div>

        <div class="flex flex-col items-end justify-between">
            <ItemModifierCategoryChip Category="ModifierCategory.Pseudo"/>

            <div class="h-[2px]"></div>

            @if ((Filter.Checked ?? false) && Filter.Modifier.HasValue)
            {
                <FilterRange @bind-Min="@Filter.Min" @bind-Max="@Filter.Max" TypeChanged="TypeChanged"/>
            }
        </div>
    </div>
</FilterWrapper>

@inject IStringLocalizer<TradeResources> Resources

@code {

    [CascadingParameter]
    public required PseudoModifierFilter Filter { get; set; }

    private void TypeChanged(FilterRange.RangeType type)
    {
        switch (type)
        {
            case FilterRange.RangeType.Minimum:
                Filter.NormalizeMinValue();
                Filter.Max = null;
                break;

            case FilterRange.RangeType.Maximum:
                Filter.NormalizeMaxValue();
                Filter.Min = null;
                break;

            case FilterRange.RangeType.Equals: Filter.SetExactValue(); break;

            case FilterRange.RangeType.Range:
                Filter.NormalizeMinValue();
                Filter.NormalizeMaxValue();
                break;
        }
    }

}
